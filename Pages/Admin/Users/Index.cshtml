@page
@model LinBeach.Pages.Admin.Users.IndexModel
@{
}

<div style="background-color: #320c47;">

    <div class="firstp container-fluid mb-3">
        <h2 class="text-center text-light">Manage Users</h2>
    </div>


<div class="container">
    <div class="mb-3 d-flex justify-content-end">
            <!-- Button trigger modal -->
            <button type="button" class="btn btn-outline-light" data-bs-toggle="modal" data-bs-target="#addUserModal">
                Add User  
            </button>
    </div>
    <form method="post" asp-page-handler="delete" id="deleteUserForm">
    <table class="table">
        <thead>
            <tr>
                <th class="text-light">ID</th>
                <th class="text-light">Username</th>
                <th class="text-light">Full Name</th>
                <th class="text-light">Email</th>
                <th ></th>
                
            </tr>
        </thead>
        <tbody>
            @foreach (var user in Model.Users)
            {
                <tr>
                    <td class="text-light">@user.Id</td>
                    <td class="text-light">@user.UserName</td>
                    <td class="text-light">@user.FullName</td>
                    <td class="text-light">@user.Email</td>
                    <td><a class="btn btn-outline-danger user-delete-btn" data-id="@user.Id">
                        Delete
                    </a></td>
                    
                </tr>
            }
        </tbody>
    </table>
    <input type="hidden" asp-for="UserId" id="selectedId"/>
    </form>
    </div>
</div>

<form method="post">
<!-- Modal -->
    <div class="modal fade" id="addUserModal" tabindex="-1" aria-labelledby="addUserModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                    <h1 class="modal-title fs-5" id="addUserModalLabel">Add User</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="mb-3">
                    <label class="form-label">Username</label>
                        <input type="text" class="form-control" id="addUser_UserName" asp-for="addUser.UserName" />
                </div>
                <div class="mb-3">
                    <label class="form-label">Email</label>
                        <input type="email" class="form-control" id="addUser_Email" asp-for="addUser.Email" />
                </div>
                <div class="mb-3">
                    <label class="form-label">Full Name</label>
                    <input type="text" class="form-control" asp-for="addUser.FullName"/>
                </div>
                <div class="mb-3">
                    <label class="form-label">Password</label>
                    <input type="password" class="form-control" asp-for="addUser.Password"/>
                </div>
                <div class="mb-3">
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" value="User" id="UserRole" checked disabled>
                        <label class="form-check-label" for="UserRole">
                            User Role
                        </label>

                    </div>
                        @if (User.IsInRole("SAdmin"))
                        {
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" id="AminRole" asp-for="addUser.AdminRole">
                                <label class="form-check-label" for="AminRole">
                                    Admin Role
                                </label>
                            </div>
                        }
                        
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-outline-dark" data-bs-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-outline-dark" id="saveUserButton" disabled>Save</button>
            </div>
        </div>
    </div>
</div>
</form>

@section Scripts{
    <script>

        function updateSaveButtonState() {
            if (usernameEnable && emailEnable) {
                $('#saveUserButton').prop('disabled', false);
            } else {
                $('#saveUserButton').prop('disabled', true);
            }
        }

        // AJAX call to check if the username exists
        $('#addUser_UserName').on('change', function () {
            var username = $(this).val(); // Get the entered username
            usernameEnable = false; // Reset the flag

            if (username) {
                $.ajax({
                    url: '/Admin/Users/Index?handler=CheckUsername',
                    method: 'GET',
                    data: { username: username },
                    dataType: 'json',
                    success: function (response) {
                        usernameEnable = !response.exists;
                        if (response.exists) {
                            alert('This username already exists.');
                        }
                        updateSaveButtonState(); // Update the button state
                    }
                });
            } else {
                updateSaveButtonState(); // Update the button state
            }
        });

        // AJAX call to check if the email exists
        $('#addUser_Email').on('change', function () {
            var email = $(this).val(); // Get the entered email
            emailEnable = false; // Reset the flag

            if (email) {
                $.ajax({
                    url: '/Admin/Users/Index?handler=CheckEmail',
                    method: 'GET',
                    data: { email: email },
                    dataType: 'json',
                    success: function (response) {
                        emailEnable = !response.exists;
                        if (response.exists) {
                            alert('This email already exists.');
                        }
                        updateSaveButtonState(); // Update the button state
                    }
                });
            } else {
                updateSaveButtonState(); // Update the button state
            }
        });


        const userDeleteButtons = document.querySelectorAll('.user-delete-btn');

        document.getElementById('saveUserButton').addEventListener('click', function (event) {
            var passwordInput = document.getElementById('addUser_Password'); // replace 'addUser_Password' with the actual ID of your password input
            var password = passwordInput.value;

            // Define your password criteria
            var hasUpperCase = /[A-Z]/.test(password);
            var hasLowerCase = /[a-z]/.test(password);
            var hasNumbers = /\d/.test(password);
            var hasSpecialChars = /\W/.test(password);
            var isLongEnough = password.length >= 6; // For example, a minimum of 8 characters

            // Check if all criteria are met
            if (hasUpperCase && hasLowerCase && hasNumbers && hasSpecialChars && isLongEnough) {
                // If the password meets the criteria, allow the form to be submitted
                return true;
            } else {
                // If the password doesn't meet the criteria, prevent the form submission and alert the user
                event.preventDefault();
                alert('Password does not meet the required criteria:\n- At least 6 characters\n- At least one uppercase letter\n- At least one lowercase letter\n- At least one number\n- At least one special character');
                return false;
            }
        });

        userDeleteButtons.forEach((button) => {
            button.addEventListener('click', function (event) {
                event.preventDefault(); // Prevent the link from navigating directly

                const userId = button.getAttribute('data-id');
                const userConfirmation = confirm('Are you sure you want to delete this user?'); // Pop-up confirmation

                if (userConfirmation) {
                    // User clicked 'OK', proceed with form submission
                    document.getElementById('selectedId').value = userId; // Set the hidden input value to the user's ID
                    document.getElementById('deleteUserForm').submit(); // Submit the form
                }
            });
        });

    </script>
}